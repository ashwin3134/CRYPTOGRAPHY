#include <stdio.h>
#include <string.h>
#include <ctype.h>
#define SIZE 5

void prepareMessage(char *message, char *prepared) {
    int len = strlen(message);
    int i, j = 0;
    for (i = 0; i < len; i++) {
        if (isalpha(message[i])) {
            prepared[j++] = toupper(message[i]);
        }
    }
    prepared[j] = '\0';
    for (i = 0; i < j; i += 2) {
        if (prepared[i] == prepared[i + 1]) {
            memmove(prepared + i + 2, prepared + i + 1, strlen(prepared) - i);
            prepared[i + 1] = 'X';
        }
    }
    if (strlen(prepared) % 2 != 0) {
        prepared[j++] = 'X';
        prepared[j] = '\0';
    }
}
void findPosition(char keyMatrix[SIZE][SIZE], char ch, int *row, int *col) {
    int i, j;
    if (ch == 'J') ch = 'I';
    for (i = 0; i < SIZE; i++) {
        for (j = 0; j < SIZE; j++) {
            if (keyMatrix[i][j] == ch) {
                *row = i;
                *col = j;
                return;
            }
        }
    }
}
void encryptDigraph(char keyMatrix[SIZE][SIZE], char ch1, char ch2, char *out1, char *out2) {
    int row1, col1, row2, col2;
    
    findPosition(keyMatrix, ch1, &row1, &col1);
    findPosition(keyMatrix, ch2, &row2, &col2);

    if (row1 == row2) {
        *out1 = keyMatrix[row1][(col1 + 1) % SIZE];
        *out2 = keyMatrix[row2][(col2 + 1) % SIZE];
    } else if (col1 == col2) {
        *out1 = keyMatrix[(row1 + 1) % SIZE][col1];
        *out2 = keyMatrix[(row2 + 1) % SIZE][col2];
    } else {
        *out1 = keyMatrix[row1][col2];
        *out2 = keyMatrix[row2][col1];
    }
}
void encryptMessage(char keyMatrix[SIZE][SIZE], char *plainText, char *cipherText) {
    int i;
    char ch1, ch2;
    for (i = 0; i < strlen(plainText); i += 2) {
        ch1 = toupper(plainText[i]);
        ch2 = toupper(plainText[i + 1]);
        encryptDigraph(keyMatrix, ch1, ch2, &cipherText[i], &cipherText[i + 1]);
    }
    cipherText[strlen(plainText)] = '\0';
}
int main() {
    char keyMatrix[SIZE][SIZE] = {
        {'M', 'F', 'H', 'I', 'K'},
        {'U', 'N', 'O', 'P', 'Q'},
        {'Z', 'V', 'W', 'X', 'Y'},
        {'E', 'L', 'A', 'R', 'G'},
        {'D', 'S', 'T', 'B', 'C'}
    };
    char plainText[] = "Must see you over Cadogan West. Coming at once.";
    char preparedText[256] = {0};
    char cipherText[256] = {0};

    prepareMessage(plainText, preparedText);
    encryptMessage(keyMatrix, preparedText, cipherText);

    printf("Prepared text: %s\n", preparedText);
    printf("Encrypted text: %s\n", cipherText);

    return 0;
}
OUTPUT:
Prepared text: MUSTSEEYOUOVERCADOGANWESTCOMINGATONCEX
Encrypted text: UZTBDLGZPNNWLGTGTUEROVLDBDUHFPERHWQSRZ
