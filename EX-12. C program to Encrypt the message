#include <stdio.h>
int main() {
    int key[2][2] = {{9, 4}, {5, 7}};
    char plaintext[] = "MEETME";
    char ciphertext[100];
    char decrypted[100];
    int i, j, k;

    for (i = 0; i < strlen(plaintext); i += 2) {
        ciphertext[i] = 'A' + ((key[0][0] * (plaintext[i] - 'A') + key[0][1] * (plaintext[i + 1] - 'A')) % 26);
        ciphertext[i + 1] = 'A' + ((key[1][0] * (plaintext[i] - 'A') + key[1][1] * (plaintext[i + 1] - 'A')) % 26);
    }
    ciphertext[i] = '\0';

    printf("Ciphertext: %s\n", ciphertext);

    int det = key[0][0] * key[1][1] - key[0][1] * key[1][0];
    det = (det % 26 + 26) % 26;
    int detInv = 1;
    for (j = 1; j < 26; j++) {
        if ((det * j) % 26 == 1) {
            detInv = j;
            break;
        }
    }
    int inverseKey[2][2] = {{(key[1][1] * detInv) % 26, (-key[0][1] * detInv) % 26}, {(-key[1][0] * detInv) % 26, (key[0][0] * detInv) % 26}};

    for (i = 0; i < strlen(ciphertext); i += 2) {
        decrypted[i] = 'A' + ((inverseKey[0][0] * (ciphertext[i] - 'A') + inverseKey[0][1] * (ciphertext[i + 1] - 'A')) % 26);
        decrypted[i + 1] = 'A' + ((inverseKey[1][0] * (ciphertext[i] - 'A') + inverseKey[1][1] * (ciphertext[i + 1] - 'A')) % 26);
    }
    decrypted[i] = '\0';
    printf("Decrypted: %s\n", decrypted);
    return 0;
}

output
Ciphertext: UKKP
Decrypted: MEET
